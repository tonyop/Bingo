{"version":3,"sources":["stamps/green_1.png","stamps/green_2.png","stamps/green_3.png","stamps/green_4.png","stamps/green_5.png","stamps/blue_1.png","stamps/blue_2.png","stamps/blue_3.png","stamps/blue_4.png","stamps/blue_5.png","stamps/pink_1.png","stamps/pink_2.png","stamps/pink_3.png","stamps/pink_4.png","stamps/pink_5.png","logo/B.png","logo/I.png","logo/N.png","logo/G.png","logo/O.png","BingoSquare.js","BingoBoard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","stamps","stampG1","stampG2","stampG3","stampG4","stampG5","stampB1","stampB2","stampB3","stampB4","stampB5","stampP1","stampP2","stampP3","stampP4","stampP5","BingoSquare","props","state","row","col","num","beenCalled","randomstamp","heightNum","topNum","style","color1","color2","gridSize","handleClick","bind","this","setState","prevState","Math","floor","random","length","toString","onCalledChange","stamp","card","color","src","alt","position","height","top","left","transform","zIndex","className","onClick","backgroundColor","React","Component","colors","Confefe","useWindowSize","wid","hgt","width","BingoBoard","boardStyle","boardColor1","boardColor2","drawstyle","drawcolor","draworder","board","boardState","foundBingo","handleSquareChange","brd","brdState","r","push","c","found","randomNumber","includes","data","row_true","col_true","diag_true","gaid_true","cr","conf","title_files","logoB","logoI","logoN","logoG","logoO","marginTop","marginBottom","map","elm","index","key","rindex","cindex","backgrounds","0","1","2","3","4","5","6","7","8","9","10","probs","draw","background","App","images","how","time","size","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.70c76a4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/green_1.59a25701.png\";","module.exports = __webpack_public_path__ + \"static/media/green_2.a56f8251.png\";","module.exports = __webpack_public_path__ + \"static/media/green_3.f219dbc4.png\";","module.exports = __webpack_public_path__ + \"static/media/green_4.be70b966.png\";","module.exports = __webpack_public_path__ + \"static/media/green_5.a196918d.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_1.8c65206a.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_2.9cc1b5fe.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_3.d61bf90f.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_4.c86a7610.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_5.3a2a8622.png\";","module.exports = __webpack_public_path__ + \"static/media/pink_1.7786d61a.png\";","module.exports = __webpack_public_path__ + \"static/media/pink_2.b40b451b.png\";","module.exports = __webpack_public_path__ + \"static/media/pink_3.3c9616b2.png\";","module.exports = __webpack_public_path__ + \"static/media/pink_4.8a2b39dd.png\";","module.exports = __webpack_public_path__ + \"static/media/pink_5.e84137de.png\";","module.exports = __webpack_public_path__ + \"static/media/B.a40c304f.png\";","module.exports = __webpack_public_path__ + \"static/media/I.a9873fca.png\";","module.exports = __webpack_public_path__ + \"static/media/N.eba4909f.png\";","module.exports = __webpack_public_path__ + \"static/media/G.b68d13d7.png\";","module.exports = __webpack_public_path__ + \"static/media/O.2295cec9.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Bingo.css';\n\nimport stampG1 from './stamps/green_1.png';\nimport stampG2 from './stamps/green_2.png';\nimport stampG3 from './stamps/green_3.png';\nimport stampG4 from './stamps/green_4.png';\nimport stampG5 from './stamps/green_5.png';\nimport stampB1 from './stamps/blue_1.png';\nimport stampB2 from './stamps/blue_2.png';\nimport stampB3 from './stamps/blue_3.png';\nimport stampB4 from './stamps/blue_4.png';\nimport stampB5 from './stamps/blue_5.png';\nimport stampP1 from './stamps/pink_1.png';\nimport stampP2 from './stamps/pink_2.png';\nimport stampP3 from './stamps/pink_3.png';\nimport stampP4 from './stamps/pink_4.png';\nimport stampP5 from './stamps/pink_5.png';\n\nlet stamps = [stampG1, stampG2, stampG3, stampG4, stampG5,\n              stampB1, stampB2, stampB3, stampB4, stampB5,\n              stampP1, stampP2, stampP3, stampP4, stampP5]\n\n\n\nclass BingoSquare extends React.Component {\n  constructor(props) {\n    // Initialize mutable state\n    super(props);\n    this.state = {\n      row: -1, col: -1, num: -1, beenCalled: false, \n      randomstamp: 0, heightNum: '77%', topNum:'50%',\n      style: 'horizontal', color1: 'rgb(0,0,0)', color2:'rgb(255,255,255)',\n      gridSize: 5\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    // This line automatically assigns this.props.url to the const variable url\n    this.setState({row: this.props.row,\n                    col: this.props.col,\n                    num: this.props.num,\n                    style: this.props.style,\n                    color1: this.props.color1,\n                    color2: this.props.color2,\n                    gridSize: this.props.gridSize});\n  }\n\n  handleClick() {\n    // e.preventDefault();\n    const { row } = this.state;\n    const { col } = this.state;\n    const { num } = this.state;\n    const { beenCalled } = this.state;\n\n    this.setState((prevState) => ({\n                    beenCalled: !prevState.beenCalled,\n                    randomstamp: stamps[Math.floor(Math.random() * stamps.length)],\n                    heightNum: (77+Math.floor(Math.random() * 12)).toString()+'%',\n                    topNum: (50+Math.floor(Math.random() * 10)).toString()+'%',\n                  }));\n    this.props.onCalledChange({row:row, col:col, num:num, beenCalled:!beenCalled});   \n  }\n\n\n  render() {\n    // const posts = postsData.map(\n    //   (post) => <Post key={post.postid} url={post.url} postid={post.postid} />,\n    // );\n    const { row } = this.state;\n    const { col } = this.state;\n    const { num } = this.state;\n    const { gridSize } = this.state;\n    const { style } = this.state;\n    const { color1 } = this.state;\n    const { color2 } = this.state;\n    const { randomstamp } = this.state;\n    const { heightNum } = this.state;\n    const { topNum } = this.state;\n    const { beenCalled } = this.state;\n\n    let stamp;\n    if (beenCalled){\n      stamp = <img src={randomstamp} alt=\"\" style={{position:'absolute', height:heightNum, top:topNum, left:'50%', transform: 'translate(-50%, -50%)', zIndex:'100'}}/>\n    }\n    let card;\n    if (num!==-1){\n      card = <p style={{zIndex:'10'}}>{num}</p>;\n    }\n    else{\n      card = <p style={{zIndex:'10', color:'rgb(150, 20, 20)'}}>FREE</p>;\n    }\n\n    let color;\n    if (style==='horizontal'){\n      if (row%2===0){\n        color=color1;\n      }\n      else{\n        color=color2;\n      }\n    }\n    else if (style==='vertical'){\n      if (col%2===0){\n        color=color1;\n      }\n      else{\n        color=color2;\n      }\n    }\n    else if (style==='diagonal'){\n      if ((row*gridSize+col)%2===0){\n        color=color1;\n      }\n      else{\n        color=color2;\n      }\n    }\n    else{\n      color = 'rgb(255,255,255)';\n    }\n\n    if (row===2 && col===2){\n      color = 'rgb(255,255,255)';\n    }\n\n    return (\n      <div className=\"column\" onClick={this.handleClick} style={{backgroundColor:color}}>\n          <div style={{ position:'absolute', top:'50%', left:'50%', transform: 'translate(-50%, -50%)' }}>\n            <div >\n              {card}\n              {stamp}\n            </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nBingoSquare.propTypes = {\n  row: PropTypes.number.isRequired,\n  col: PropTypes.number.isRequired,\n  num: PropTypes.number.isRequired,\n};\nexport default BingoSquare;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\nimport BingoSquare from './BingoSquare.js';\nimport './Bingo.css';\n\n\n\n\nimport logoB from './logo/B.png';\nimport logoI from './logo/I.png';\nimport logoN from './logo/N.png';\nimport logoG from './logo/G.png';\nimport logoO from './logo/O.png';\n\nlet colors = [['rgb(255, 230, 168)', 'rgb(255, 117, 209)'],\n              ['rgb(184, 255, 143)','rgb(255, 117, 142)'],\n              ['rgb(143, 244, 255)','rgb(255, 255, 255)']];\n\n\nconst Confefe = () => {\n  const { wid, hgt } = useWindowSize();\n  return <Confetti height={hgt} width={wid}/>;\n}\n\n\n\nclass BingoBoard extends React.Component {\n  constructor(props) {\n    // Initialize mutable state\n    super(props);\n\n    let boardStyle;\n    let boardColor1;\n    let boardColor2;\n    let drawstyle = Math.random();\n    let drawcolor = Math.random();\n    let draworder = Math.random();\n\n    if (drawstyle<0.33) {\n      boardStyle = 'vertical';\n    }\n    else if (drawstyle<0.66){\n      boardStyle = 'horizontal';\n    }\n    else{\n      boardStyle = 'diagonal';\n    }\n\n    if (drawcolor<0.33) {\n      if (draworder<0.5) {\n        boardColor1 = colors[0][0];\n        boardColor2 = colors[0][1];\n      }\n      else {\n        boardColor1 = colors[0][1];\n        boardColor2 = colors[0][0];\n      }\n    }\n    else if (drawcolor<0.66){\n      if (draworder<0.5) {\n        boardColor1 = colors[1][0];\n        boardColor2 = colors[1][1];\n      }\n      else {\n        boardColor1 = colors[1][1];\n        boardColor2 = colors[1][0];\n      }\n    }\n    else{\n      if (draworder<0.5) {\n        boardColor1 = colors[2][0];\n        boardColor2 = colors[2][1];\n      }\n      else {\n        boardColor1 = colors[2][1];\n        boardColor2 = colors[2][0];\n      }\n    }\n\n    this.state = {\n      board: [], boardState: [], foundBingo: false, gridSize: 0,\n      boardStyle: boardStyle, boardColor1: boardColor1, boardColor2: boardColor2,\n    };\n\n    this.handleSquareChange = this.handleSquareChange.bind(this);\n  }\n\n  componentDidMount() {\n    // This line automatically assigns this.props.url to the const variable url\n    \n    let brd = [];\n    let brdState = [];\n    for (let r=0; r<this.props.gridSize; r++){\n      brd.push([]);\n      brdState.push([]);\n      for (let c=0; c<this.props.gridSize; c++){\n        let found = false;\n        let randomNumber;\n        while (!found){\n          randomNumber = 1+(15*c)+Math.floor(Math.random() * 15);\n          found = !brd[r].includes(randomNumber);\n        }\n        if (r===2 && c===2){\n          randomNumber = -1;\n        }\n        brd[r].push({row:r, col:c, num:randomNumber});\n        brdState[r].push(false);\n      }\n    }\n\n    this.setState({gridSize: this.props.gridSize,\n                    board: brd, boardState: brdState});\n\n  }\n\n  handleSquareChange(data) {\n    const { row } = data;\n    const { col } = data;\n    //const { num } = data.num;\n    const { beenCalled } = data;\n\n    const { boardState } = this.state;\n    boardState[row][col] = beenCalled;\n\n    \n\n    let found = false;\n    for (let r=0; r<this.props.gridSize; r++){\n      let row_true = true;\n      for (let c=0; c<this.props.gridSize; c++){\n        row_true = row_true && boardState[r][c];\n      }\n      if (row_true){\n        found = true;\n        break;\n      }\n    }\n\n    \n\n    for (let c=0; c<this.props.gridSize; c++){\n      let col_true = true;\n      for (let r=0; r<this.props.gridSize; r++){\n        col_true = col_true && boardState[r][c];\n      }\n      if (col_true){\n        found = true;\n        break;\n      }\n    }\n\n    let diag_true = true;\n    let gaid_true = true;\n    for (let cr=0; cr<this.props.gridSize; cr++){\n      diag_true = diag_true && boardState[cr][cr];\n      gaid_true = gaid_true && boardState[cr][this.props.gridSize-cr-1];\n    }\n    if (diag_true || gaid_true){\n      found = true;\n    }\n\n    this.setState({boardState: boardState, foundBingo:found});\n  }\n\n\n  render() {\n    const { board } = this.state;\n    const { gridSize } = this.state;\n    const { boardStyle } = this.state;\n    const { boardColor1 } = this.state;\n    const { boardColor2 } = this.state;\n    const { foundBingo } = this.state;\n\n    let conf;\n    if (foundBingo){\n      conf = <Confefe />;\n    }\n    \n    const title = [\"B\", \"I\", \"N\", \"G\", \"O\"];\n    const title_files = [logoB, logoI, logoN, logoG, logoO]\n    return (\n      <div>\n        <div style={{position:'absolute', zIndex:'200'}}>\n        {conf}\n        </div>\n        <div className=\"board\" style={{ zIndex: '2' }}>\n          \n          <div style={{ marginTop:'1%', height: '100%', width: '100%' }}>\n            <div className=\"rowLetter\" style={{ marginBottom: '2%'}}>\n                {title.map((elm, index) => (\n                  <div key={'letter_'+index.toString()} className=\"column\" style={{backgroundColor: 'white'}}>\n                    <div style={{ position:'absolute', top:'50%', left:'50%', transform: 'translate(-50%, -50%)' }}>\n                      <img className=\"bingoLetter\" src={title_files[index]} alt=\"loading...\" />\n                    </div>\n                  </div>\n                ))}\n            </div>\n\n            {board.map((row, rindex) => (\n              <div key={'bingrow_'+rindex.toString()} className=\"row\">\n                {row.map((elm, cindex) => (\n                  <BingoSquare key={'bingo_'+rindex.toString()+'_'+cindex.toString()} onCalledChange={this.handleSquareChange} \n                                row={elm.row} \n                                col={elm.col} \n                                num={elm.num} \n                                style={boardStyle} \n                                color1={boardColor1} \n                                color2={boardColor2} \n                                gridSize={gridSize}/>\n                  ))}\n              </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nBingoBoard.propTypes = {\n  gridSize: PropTypes.number.isRequired,\n};\nexport default BingoBoard;","import React from 'react';\nimport Sky from 'react-sky';\nimport BingoBoard from './BingoBoard.js';\nimport './App.css';\nimport './Bingo.css';\n\n\n\nconst emojis = {0: 'https://image.flaticon.com/icons/svg/743/743247.svg',\n                1: 'https://image.flaticon.com/icons/svg/743/743267.svg',\n                2: 'https://image.flaticon.com/icons/svg/742/742923.svg',\n                3: 'https://image.flaticon.com/icons/svg/742/742920.svg',\n                4: 'https://image.flaticon.com/icons/svg/742/742836.svg',\n                5: 'https://www.flaticon.com/premium-icon/icons/svg/2018/2018428.svg',\n                6: 'https://image.flaticon.com/icons/svg/743/743199.svg',\n                7: 'https://image.flaticon.com/icons/svg/743/743284.svg',\n                8: 'https://image.flaticon.com/icons/svg/743/743206.svg',\n                9: 'https://image.flaticon.com/icons/svg/743/743228.svg',\n                10: 'https://image.flaticon.com/icons/svg/743/743279.svg',\n              }\n\nconst spring = {0: 'https://www.flaticon.com/premium-icon/icons/svg/2469/2469990.svg',\n                1: 'https://www.flaticon.com/premium-icon/icons/svg/2556/2556832.svg',\n                2: 'https://www.flaticon.com/premium-icon/icons/svg/2582/2582652.svg',\n                3: 'https://image.flaticon.com/icons/svg/2599/2599011.svg',\n                4: 'https://image.flaticon.com/icons/svg/2598/2598973.svg',\n                5: 'https://image.flaticon.com/icons/svg/2598/2598964.svg',\n                6: 'https://image.flaticon.com/icons/svg/2675/2675263.svg',\n                7: 'https://image.flaticon.com/icons/svg/2709/2709239.svg',\n                8: 'https://www.flaticon.com/premium-icon/icons/svg/2652/2652012.svg',\n                9: 'https://image.flaticon.com/icons/svg/1998/1998765.svg',\n                10: 'https://image.flaticon.com/icons/svg/2521/2521202.svg',\n              }\n\nconst emojis_sick = {0: 'https://www.flaticon.com/premium-icon/icons/svg/1791/1791340.svg',\n                    1: 'https://image.flaticon.com/icons/svg/743/743269.svg',\n                    2: 'https://image.flaticon.com/icons/svg/742/742792.svg',\n                    3: 'https://image.flaticon.com/icons/svg/743/743207.svg',\n                    4: 'https://www.flaticon.com/premium-icon/icons/svg/2749/2749421.svg',\n                    5: 'https://image.flaticon.com/icons/svg/2585/2585191.svg',\n                    6: 'https://image.flaticon.com/icons/svg/2663/2663780.svg',\n                    7: 'https://image.flaticon.com/icons/svg/2741/2741111.svg',\n                    8: 'https://image.flaticon.com/icons/svg/2760/2760616.svg',\n                    9: 'https://www.flaticon.com/premium-icon/icons/svg/2018/2018207.svg',\n                    10: 'https://image.flaticon.com/icons/svg/2473/2473084.svg',\n                  }\n\n\nconst backgrounds = [emojis, spring, emojis_sick];\nconst probs = [0.45, 0.9, 1];\n\n\nconst draw = Math.random();\nlet background = backgrounds[0];\nif (draw<probs[0]){\n  background = backgrounds[0]\n}\nelse if (draw<probs[1]) {\n  background = backgrounds[1]\n}\nelse {\n  background = backgrounds[2]\n}\n\n\n\n\nfunction App() {\n  \n\n  return (\n    <div>\n      \n      <BingoBoard gridSize={5}/>\n      \n\n      <div className=\"refresh\">\n          \n      </div>\n\n      <div style={{ zIndex: '1' }}>\n        <Sky\n            images={background}\n            how={60} /* Pass the number of images Sky will render chosing randomly */\n            time={200} /* time of animation */\n            size={'15px'} /* size of the rendered images */\n            background={'rgba(35, 27, 66, 0.9)'} /* color of background */\n          />\n          <Sky\n            images={background}\n            how={60} /* Pass the number of images Sky will render chosing randomly */\n            time={200} /* time of animation */\n            size={'30px'} /* size of the rendered images */\n            background={'rgba(52, 52, 52, 0.7)'} /* color of background */\n          />\n          <Sky\n            images={background}\n            how={60} /* Pass the number of images Sky will render chosing randomly */\n            time={200} /* time of animation */\n            size={'50px'} /* size of the rendered images */\n            background={'rgba(52, 52, 52, 0.5)'} /* color of background */\n          />\n          <Sky\n            images={background}\n            how={60} /* Pass the number of images Sky will render chosing randomly */\n            time={200} /* time of animation */\n            size={'100px'} /* size of the rendered images */\n            background={'rgba(52, 52, 52, 0.4)'} /* color of background */\n          />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}